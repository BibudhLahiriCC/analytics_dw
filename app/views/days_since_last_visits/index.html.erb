<script src="http://mbostock.github.com/d3/d3.js?2.7.1"></script>
<script src="http://mbostock.github.com/d3/d3.layout.js?2.7.1"></script>
<style>

body {
  font: 10px sans-serif;
}

.chart rect {
  fill: steelblue;
  stroke: white;
}

line {
  stroke: black;
  shape-rendering: crispEdges;
  stroke-width: 2;
}

</style>
<body>
<script>

var data = <%= @days_since_last_visits %>;

//Draw the histogram.
var histogram = d3.layout.histogram()
                (data);
/*The layout object returned by d3.layout.histogram()
  is both an object and a function. Since it is a function,
  it can be invoked with the parameter "data". "histogram" is an
  array with the frequencies of the different buckets.*/

  var width = 480,
    height = 250;

  //x and y defined below are functions. Used later.
  var x = d3.scale.ordinal()
    .domain(histogram.map(function(d) { return d.x; }))
    .rangeRoundBands([0, width]);

  var y = d3.scale.linear()
    .domain([0, d3.max(histogram.map(function(d) { return d.y; }))])
    .range([0, height]);

  //Create an SVG container here for the histogram

  var chart = d3.select("#histgrm").append("svg")
    .attr("class", "chart")
    .attr("width", width)
    .attr("height", height);

/*The data array "histogram" is being bound/joined to a selection.
  We are using the enter() operator because there are, at this
  point, no nodes in the DOM of type "rect". d.x is lower bound of histogram
  bin. d.y is the frequency.*/

  chart.selectAll("rect")
    .data(histogram)
    .enter().append("rect")
    .attr("width", x.rangeBand())
    .attr("x", function(d) { return x(d.x); })
    .attr("y", function(d) { return height - y(d.y); })
    .attr("height", function(d) { return y(d.y); });

/*Label the histogram bins. The return type is a selection of
  objects of class SVGTextElement. We do not need the index in the
  key function.*/

  var labels =
    chart.selectAll("text")
      .data(histogram)
      //.select(function(d, i) { return i & 1 ? this : null; })
      .enter().append("svg:text")
      .attr("x", function(d) { return x(d.x); })
      .attr("y", height - 20)
      .attr("dx", 4)
      .attr("dy", ".71em")
      .attr("text-anchor", "start")
      .text(function(d) { return Math.round(d.x); })
      .attr("font-family", "sans-serif")
      .attr("font-size", "5 px")
      .attr("fill", "black");

 //Draw a line at the bottom of the histogram
 chart.append("line")
    .attr("x1", 0)
    .attr("x2", width)
    .attr("y1", height)
    .attr("y2", height);

 //Draw the box plot

 var i=0;
 var data_size = data.length;
 data.sort(d3.ascending);
 var max = data[data_size-1];
 var min = data[0];
 var q1 = d3.quantile(data, 0.25);
 var median = d3.quantile(data, 0.5);
 var q3 = d3.quantile(data, 0.75);

 /*In a box-and-whisker plot, whiskers are drawn at Q3 + 1.5*IQR
    and Q1 - 1.5*IQR. There may be outliers beyond these lines.*/

 var iqr = q3 - q1;
 var low_whisker = q1 - 1.5*iqr;
 if (low_whisker < min)
   low_whisker = min;
 var high_whisker = q3 + 1.5*iqr;
 if (high_whisker > max)
   high_whisker = max;
 var whishker_width = 20;
 var box_width = 50;

 //Create an SVG container here for the box-plot
  var boxPlot = d3.select("#boxplt").append("svg")
    .attr("width", width)
    .attr("height", height);

  function map_y(input)
  {
    /*Returns an input, which is in the range [low_whisker, high_whisker],
      to the range [0, height]. Also takes care of the fact that the Y-axis
      in SVG increases downwards, while numbers on boxplot increase upwards.*/
    domain_size = high_whisker - low_whisker + 1;
    range_size = height;
    return height - Math.round((input - low_whisker + 1)*range_size/domain_size);
  }

  /*The x and y coordinates of the SVG components in boxPlot
  are w.r.t. the boxPlot SVG container only.*/
  var whisker_left_end = width/2 - whishker_width/2;
  var whisker_right_end = width/2 + whishker_width/2;

  //The low whisker
  boxPlot.append("line")
    .attr("x1", whisker_left_end)
    .attr("y1", map_y(low_whisker))
    .attr("x2", whisker_right_end)
    .attr("y2", map_y(low_whisker));

  //The high whisker
  boxPlot.append("line")
    .attr("x1", whisker_left_end)
    .attr("y1", map_y(high_whisker))
    .attr("x2", whisker_right_end)
    .attr("y2", map_y(high_whisker));

  var box_left_end = width/2 - box_width/2;
  var box_right_end = width/2 + box_width/2;

  //The q1 line
  boxPlot.append("line")
    .attr("x1", box_left_end)
    .attr("y1", map_y(q1))
    .attr("x2", box_right_end)
    .attr("y2", map_y(q1));

  //The q3 line
  boxPlot.append("line")
    .attr("x1", box_left_end)
    .attr("y1", map_y(q3))
    .attr("x2", box_right_end)
    .attr("y2", map_y(q3));

  //The median line
  boxPlot.append("line")
    .attr("x1", box_left_end)
    .attr("y1", map_y(median))
    .attr("x2", box_right_end)
    .attr("y2", map_y(median));

  //Complete the box.
  boxPlot.append("line")
    .attr("x1", box_left_end)
    .attr("y1", map_y(q1))
    .attr("x2", box_left_end)
    .attr("y2", map_y(q3));

  boxPlot.append("line")
    .attr("x1", box_right_end)
    .attr("y1", map_y(q1))
    .attr("x2", box_right_end)
    .attr("y2", map_y(q3));

  //Complete the vertical lines from end of box to whisker
  boxPlot.append("line")
    .attr("x1", width/2)
    .attr("y1", map_y(q3))
    .attr("x2", width/2)
    .attr("y2", map_y(high_whisker));

  boxPlot.append("line")
    .attr("x1", width/2)
    .attr("y1", map_y(q1))
    .attr("x2", width/2)
    .attr("y2", map_y(low_whisker));

  //Add labels to boxplot

  var quartiles = [];
  quartiles.push(q1);
  quartiles.push(median);
  quartiles.push(q3);

  var boxplot_label_start_x = box_right_end + 10;

      boxPlot.selectAll("text")
      .data(quartiles)
      .enter()
      .append("svg:text")
      .attr("x", boxplot_label_start_x)
      .attr("y", function(d) { return map_y(d) - 5; })
      .attr("dx", 4)
      .attr("dy", ".71em")
      .attr("text-anchor", "start")
      .text(function(d) { return Math.round(d); })
      .attr("font-family", "sans-serif")
      .attr("font-size", "5 px")
      .attr("fill", "black");

   boxPlot.append("svg:text")
      .attr("x", boxplot_label_start_x)
      .attr("y", map_y(low_whisker) - 7)
      .attr("dx", 4)
      .attr("dy", ".71em")
      .attr("text-anchor", "start")
      .text(Math.round(low_whisker))
      .attr("font-family", "sans-serif")
      .attr("font-size", "5 px")
      .attr("fill", "black");

    boxPlot.append("svg:text")
      .attr("x", boxplot_label_start_x)
      .attr("y", map_y(high_whisker) + 2)
      .attr("dx", 4)
      .attr("dy", ".71em")
      .attr("text-anchor", "start")
      .text(Math.round(high_whisker))
      .attr("font-family", "sans-serif")
      .attr("font-size", "5 px")
      .attr("fill", "black");
</script>

